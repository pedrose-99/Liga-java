pipeline {
    agent any

    environment {
        MAVEN_OPTS = '-Dmaven.repo.local=.m2/repository'
        SONAR_TOKEN = credentials('sonar-token-id') // Agrega esto en Jenkins > Credentials
    }

    tools {
        maven 'Maven 3' // AsegÃºrate de tener este nombre en tu configuraciÃ³n global de Jenkins
        jdk 'Java 17'   // O Java 11, dependiendo de tu proyecto
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/pedrose-99/Liga-java.git', branch: 'main'
            }
        }

        stage('Compilar') {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage('Pruebas') {
            steps {
                sh 'mvn test'
            }
        }

        stage('AnÃ¡lisis con SonarQube') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh 'mvn sonar:sonar -Dsonar.login=$SONAR_TOKEN'
                }
            }
        }

        stage('Empaquetar') {
            steps {
                sh 'mvn package'
            }
        }
    }

    post {
        always {
            echo 'Pipeline finalizado.'
        }
        success {
            echo 'Ã‰xito total ðŸ™Œ'
        }
        failure {
            echo 'Algo fallÃ³ ðŸ˜¢'
        }
    }
}
